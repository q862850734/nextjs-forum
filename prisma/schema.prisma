// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                 String  @id @default(cuid())
  userId             String  @map("user_id")
  type               String
  provider           String
  providerAccountId  String  @map("provider_account_id")
  refresh_token      String? @db.Text
  access_token       String? @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String? @db.Text
  session_state      String?
  oauth_token_secret String?
  oauth_token        String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verificationtokens")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime? @map("email_verified")
  password      String?
  image         String?
  isBlocked     Boolean   @default(false) @map("is_blocked")
  createdAt     DateTime  @default(now()) @map("created_at")
  updatedAt     DateTime  @updatedAt @map("updated_at")
  accounts      Account[]
  sessions      Session[]
  posts         Post[]    @relation("posts")
  profile       Profile?
  thumb_list    Post[]    @relation("thumb_list")
  role          Role      @default(USER)

  Post Post[]
  @@map("users")
}

enum Role {
  USER
  ADMIN
}

model Profile {
  id         Int     @id @default(autoincrement())
  userId     String  @unique @map("user_id")
  bio        String?
  banner     String?
  background String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  @@map("profiles")
}

model Post {
  id          Int      @id @default(autoincrement())
  author      User     @relation(fields: [authorId], references: [id])
  like        User[]   @relation("thumb_list")
  authorId    String   @map("author_id")
  title       String?
  description String?
  content     String
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")
  url         String?
  thumbnail   String?
  isLocked    Boolean  @default(false) @map("is_locked")

  viewCount  Int     @default(0) @map("view_count")
  likesCount Int     @default(0) @map("likes_count")
  isLiked    Boolean @default(false) @map("is_liked")
  tags       Tag[]

  forum   Forum @relation(fields: [forumId], references: [id])
  forumId Int   @map("community_id")

  User   User?   @relation("posts", fields: [userId], references: [id])
  userId String?
  @@map("posts")
}

model Tag {
  id          Int     @id @default(autoincrement())
  name        String  @unique
  description String?
  posts       Post[]

  @@map("tags")
}

model Forum {
  id          Int     @id @default(autoincrement())
  title       String  @unique
  subscribers Int     @default(0)
  description String?
  icon        String  @default("http://placeimg.com/300/300")
  posts       Post[]
  style       Style?
  categoryId  Int     @map("category_id")

  category ForumCategory @relation(fields: [categoryId], references: [id], onDelete: Cascade)

  @@map("forums")
}

model ForumCategory {
  id    Int     @id @default(autoincrement())
  name  String  @unique
  icon  String?
  forum Forum[]

  @@map("forum_categories")
}

model Style {
  id   Int    @id @default(autoincrement())
  icon String @default("https://raw.githubusercontent.com/uid-vhan/notebook-imgs/main/imgs/favicon.ico")

  forum   Forum @relation(fields: [forumId], references: [id])
  forumId Int   @unique @map("forum_id")

  primaryColor String @default("#FC471E")

  @@map("style")
}

model Banner {
  id          Int     @id @default(autoincrement())
  name        String
  image       String  @default("https://source.unsplash.com/random")
  description String?
  url         String?

  @@map("banners")
}
