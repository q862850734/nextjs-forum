/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */


import type { core } from "nexus"
declare global {
  interface NexusGenCustomInputMethods<TypeName extends string> {
    /**
     * A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
     */
    date<FieldName extends string>(fieldName: FieldName, opts?: core.CommonInputFieldConfig<TypeName, FieldName>): void // "DateTime";
  }
}
declare global {
  interface NexusGenCustomOutputMethods<TypeName extends string> {
    /**
     * A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
     */
    date<FieldName extends string>(fieldName: FieldName, ...opts: core.ScalarOutSpread<TypeName, FieldName>): void // "DateTime";
  }
}


declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
}

export interface NexusGenEnums {
  Role: "ADMIN" | "USER"
}

export interface NexusGenScalars {
  String: string
  Int: number
  Float: number
  Boolean: boolean
  ID: string
  DateTime: any
}

export interface NexusGenObjects {
  Account: { // root type
    access_token?: string | null; // String
    id?: string | null; // String
    id_token?: string | null; // String
    oauth_token?: string | null; // String
    oauth_token_secret?: string | null; // String
    provider?: string | null; // String
    providerAccountId?: string | null; // String
    refresh_token?: string | null; // String
    scope?: string | null; // String
    token_type?: string | null; // String
    type?: string | null; // String
    user?: NexusGenRootTypes['User'] | null; // User
    userId?: string | null; // String
  }
  Banner: { // root type
    description?: string | null; // String
    id?: number | null; // Int
    image?: string | null; // String
    name?: string | null; // String
    url?: string | null; // String
  }
  Mutation: {};
  Post: { // root type
    authorId?: string | null; // String
    content?: string | null; // String
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    description?: string | null; // String
    id?: number | null; // Int
    isLiked?: boolean | null; // Boolean
    isLocked?: boolean | null; // Boolean
    likesCount?: number | null; // Int
    thumbnail?: string | null; // String
    title?: string | null; // String
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
    url?: string | null; // String
    viewCount?: number | null; // Int
  }
  Profile: { // root type
    avatar?: string | null; // String
    background?: string | null; // String
    banner?: string | null; // String
    bio?: string | null; // String
    id?: number | null; // Int
    name?: string | null; // String
    userId?: string | null; // String
  }
  Query: {};
  Tag: { // root type
    description?: string | null; // String
    id?: number | null; // Int
    name?: string | null; // String
  }
  User: { // root type
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    email?: string | null; // String
    emailVerified?: number | null; // Int
    id?: string | null; // String
    image?: string | null; // String
    isBlocked?: boolean | null; // Boolean
    name?: string | null; // String
    password?: string | null; // String
    role?: NexusGenEnums['Role'] | null; // Role
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
}

export interface NexusGenInterfaces {
}

export interface NexusGenUnions {
}

export type NexusGenRootTypes = NexusGenObjects

export type NexusGenAllTypes = NexusGenRootTypes & NexusGenScalars & NexusGenEnums

export interface NexusGenFieldTypes {
  Account: { // field return type
    access_token: string | null; // String
    id: string | null; // String
    id_token: string | null; // String
    oauth_token: string | null; // String
    oauth_token_secret: string | null; // String
    provider: string | null; // String
    providerAccountId: string | null; // String
    refresh_token: string | null; // String
    scope: string | null; // String
    token_type: string | null; // String
    type: string | null; // String
    user: NexusGenRootTypes['User'] | null; // User
    userId: string | null; // String
  }
  Banner: { // field return type
    description: string | null; // String
    id: number | null; // Int
    image: string | null; // String
    name: string | null; // String
    url: string | null; // String
  }
  Mutation: { // field return type
    userSetPassword: NexusGenRootTypes['User'] | null; // User
  }
  Post: { // field return type
    author: NexusGenRootTypes['User'] | null; // User
    authorId: string | null; // String
    content: string | null; // String
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    description: string | null; // String
    id: number | null; // Int
    isLiked: boolean | null; // Boolean
    isLocked: boolean | null; // Boolean
    likesCount: number | null; // Int
    tags: Array<NexusGenRootTypes['Tag'] | null> | null; // [Tag]
    thumbnail: string | null; // String
    title: string | null; // String
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
    url: string | null; // String
    viewCount: number | null; // Int
  }
  Profile: { // field return type
    avatar: string | null; // String
    background: string | null; // String
    banner: string | null; // String
    bio: string | null; // String
    id: number | null; // Int
    name: string | null; // String
    user: NexusGenRootTypes['User'] | null; // User
    userId: string | null; // String
  }
  Query: { // field return type
    banners: Array<NexusGenRootTypes['Banner'] | null> | null; // [Banner]
    postById: NexusGenRootTypes['Post'] | null; // Post
    posts: Array<NexusGenRootTypes['Post'] | null>; // [Post]!
    tags: Array<NexusGenRootTypes['Tag'] | null>; // [Tag]!
    userByEmail: NexusGenRootTypes['User'] | null; // User
    users: Array<NexusGenRootTypes['User'] | null>; // [User]!
  }
  Tag: { // field return type
    description: string | null; // String
    id: number | null; // Int
    name: string | null; // String
    posts: Array<NexusGenRootTypes['Post'] | null> | null; // [Post]
  }
  User: { // field return type
    accounts: Array<NexusGenRootTypes['Account'] | null> | null; // [Account]
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    email: string | null; // String
    emailVerified: number | null; // Int
    id: string | null; // String
    image: string | null; // String
    isBlocked: boolean | null; // Boolean
    name: string | null; // String
    password: string | null; // String
    posts: Array<NexusGenRootTypes['Post'] | null> | null; // [Post]
    profile: NexusGenRootTypes['Profile'] | null; // Profile
    role: NexusGenEnums['Role'] | null; // Role
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
  }
}

export interface NexusGenFieldTypeNames {
  Account: { // field return type name
    access_token: 'String'
    id: 'String'
    id_token: 'String'
    oauth_token: 'String'
    oauth_token_secret: 'String'
    provider: 'String'
    providerAccountId: 'String'
    refresh_token: 'String'
    scope: 'String'
    token_type: 'String'
    type: 'String'
    user: 'User'
    userId: 'String'
  }
  Banner: { // field return type name
    description: 'String'
    id: 'Int'
    image: 'String'
    name: 'String'
    url: 'String'
  }
  Mutation: { // field return type name
    userSetPassword: 'User'
  }
  Post: { // field return type name
    author: 'User'
    authorId: 'String'
    content: 'String'
    createdAt: 'DateTime'
    description: 'String'
    id: 'Int'
    isLiked: 'Boolean'
    isLocked: 'Boolean'
    likesCount: 'Int'
    tags: 'Tag'
    thumbnail: 'String'
    title: 'String'
    updatedAt: 'DateTime'
    url: 'String'
    viewCount: 'Int'
  }
  Profile: { // field return type name
    avatar: 'String'
    background: 'String'
    banner: 'String'
    bio: 'String'
    id: 'Int'
    name: 'String'
    user: 'User'
    userId: 'String'
  }
  Query: { // field return type name
    banners: 'Banner'
    postById: 'Post'
    posts: 'Post'
    tags: 'Tag'
    userByEmail: 'User'
    users: 'User'
  }
  Tag: { // field return type name
    description: 'String'
    id: 'Int'
    name: 'String'
    posts: 'Post'
  }
  User: { // field return type name
    accounts: 'Account'
    createdAt: 'DateTime'
    email: 'String'
    emailVerified: 'Int'
    id: 'String'
    image: 'String'
    isBlocked: 'Boolean'
    name: 'String'
    password: 'String'
    posts: 'Post'
    profile: 'Profile'
    role: 'Role'
    updatedAt: 'DateTime'
  }
}

export interface NexusGenArgTypes {
  Mutation: {
    userSetPassword: { // args
      password: string; // String!
    }
  }
  Query: {
    postById: { // args
      id: number; // Int!
    }
    userByEmail: { // args
      email: string; // String!
    }
  }
}

export interface NexusGenAbstractTypeMembers {
}

export interface NexusGenTypeInterfaces {
}

export type NexusGenObjectNames = keyof NexusGenObjects;

export type NexusGenInputNames = never;

export type NexusGenEnumNames = keyof NexusGenEnums;

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = keyof NexusGenScalars;

export type NexusGenUnionNames = never;

export type NexusGenObjectsUsingAbstractStrategyIsTypeOf = never;

export type NexusGenAbstractsUsingStrategyResolveType = never;

export type NexusGenFeaturesConfig = {
  abstractTypeStrategies: {
    isTypeOf: false
    resolveType: true
    __typename: false
  }
}

export interface NexusGenTypes {
  context: any;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  inputTypeShapes: NexusGenInputs & NexusGenEnums & NexusGenScalars;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  fieldTypeNames: NexusGenFieldTypeNames;
  allTypes: NexusGenAllTypes;
  typeInterfaces: NexusGenTypeInterfaces;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractTypeMembers: NexusGenAbstractTypeMembers;
  objectsUsingAbstractStrategyIsTypeOf: NexusGenObjectsUsingAbstractStrategyIsTypeOf;
  abstractsUsingStrategyResolveType: NexusGenAbstractsUsingStrategyResolveType;
  features: NexusGenFeaturesConfig;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginInputTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginInputFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
  interface NexusGenPluginArgConfig {
  }
}